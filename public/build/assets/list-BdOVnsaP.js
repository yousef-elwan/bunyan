import{m as u}from"./module.esm-Cm4okMZt.js";import{T as h}from"./tom-select.complete-KjCaKK0W.js";import{h as m}from"./api-2skSE4Ue.js";import{t as c,g as a}from"./helpers-DwlY0Bzp.js";import{S as r}from"./main-9Qm2jZ7z.js";import{i as p,f as d}from"./isPast-D4jrojYL.js";import{f,a as l}from"./ar-CDyH6U9d.js";import"./index-xsH4HHeE.js";const n=m();function g(){return{selectedUser:null,history:[],isLoadingHistory:!1,isAddModalOpen:!1,isSubmitting:!1,newSubscription:{package:"",package_name:"",duration_in_days:0,start_date:new Date().toISOString().split("T")[0],price:0,notes:""},translate:c,tomSelectInstance:null,init(){this.initializeUserSearch()},initializeUserSearch(){const e=this;this.tomSelectInstance=new h(this.$refs.userSelect,{valueField:"id",labelField:"name",searchField:["name","email","mobile"],placeholder:this.translate("search_placeholder"),load:(t,s)=>{if(!t.length)return s();n.get(a("users.search"),{params:{q:t}}).then(i=>{s(i.data.data)}).catch(()=>{console.error("Failed to load users for TomSelect"),s()})},render:{option:(t,s)=>`<div class="flex items-center gap-3 p-2">
                                    <img src="${t.avatar_url||`https://ui-avatars.com/api/?name=${s(t.name)}`}" class="w-8 h-8 rounded-full">
                                    <div>
                                        <div class="font-medium">${s(t.name)}</div>
                                        <div class="text-sm text-gray-500">${s(t.email)}</div>
                                    </div>
                                </div>`,item:(t,s)=>`<div class="flex items-center gap-2">
                                    <img src="${t.avatar_url||`https://ui-avatars.com/api/?name=${s(t.name)}`}" class="w-6 h-6 rounded-full">
                                    <span>${s(t.name)}</span>
                                </div>`},onChange:t=>{if(t){const s=e.tomSelectInstance.options[t];e.selectUser(s)}else e.selectedUser=null,e.history=[]}})},selectUser(e){this.selectedUser=e,this.fetchHistory(e.id)},fetchHistory(e){this.isLoadingHistory=!0,this.history=[],document.getElementById("history-table-body").innerHTML="",document.getElementById("history-cards-container").innerHTML="",n.get(a("subscriptions.history",{user:e})).then(t=>{const s=t.data.data||t.data;this.history=s;const i=s.length>0?s[0]:null;this.selectedUser&&(this.selectedUser.subscription_end=i?i.end_date:null)}).catch(t=>console.error("Failed to fetch subscription history:",t)).finally(()=>{this.isLoadingHistory=!1,this.renderAll()})},renderAll(){this.renderHistoryTable(),this.renderHistoryCards()},renderHistoryTable(){const e=document.getElementById("history-table-body");e&&(e.innerHTML="",this.history.forEach(t=>{const s=e.insertRow();s.className="border-t border-border-color",s.innerHTML=`
                    <td class="p-3">${t.package_name}</td>
                    <td class="p-3">${this.formatDate(t.start_date)}</td>
                    <td class="p-3">${this.formatDate(t.end_date)}</td>
                    <td class="p-3">${t.admin?t.admin.name:"N/A"}</td>
                `}))},renderHistoryCards(){const e=document.getElementById("history-cards-container");e&&(e.innerHTML="",this.history.forEach(t=>{const s=document.createElement("div");s.className="bg-page-bg p-3 rounded-lg border border-border-color",s.innerHTML=`
                    <div class="flex justify-between items-center mb-2">
                        <div class="font-bold text-text-primary">${t.package_name}</div>
                        <div class="text-xs text-text-secondary">${c("added_by")} ${t.admin?t.admin.name:"N/A"}</div>
                    </div>
                    <div class="text-sm text-text-secondary space-y-1">
                        <div><i class="fas fa-play-circle fa-fw text-green-500"></i> ${this.formatDate(t.start_date)}</div>
                        <div><i class="fas fa-stop-circle fa-fw text-red-500"></i> ${this.formatDate(t.end_date)}</div>
                    </div>
                `,e.appendChild(s)}))},addSubscription(){if(!this.newSubscription.package_name){r.fire(this.translate("error"),this.translate("please_select_package"),"error");return}this.isSubmitting=!0;const e=a("subscriptions.store",{user:this.selectedUser.id}),t={package_name:this.newSubscription.package_name,duration_in_days:this.newSubscription.duration_in_days,start_date:this.newSubscription.start_date,price:this.newSubscription.price,notes:this.newSubscription.notes};n.post(e,t).then(()=>{r.fire(this.translate("success"),this.translate("subscription_added_successfully"),"success"),this.isAddModalOpen=!1,this.resetForm(),this.fetchHistory(this.selectedUser.id)}).catch(s=>{var i,o;r.fire(this.translate("error"),((o=(i=s.response)==null?void 0:i.data)==null?void 0:o.message)||this.translate("unknown_error"),"error")}).finally(()=>this.isSubmitting=!1)},updateFormFromPackage(){if(!this.newSubscription.package){this.resetForm(!1);return}const e=JSON.parse(this.newSubscription.package);this.newSubscription.package_name=e.name,this.newSubscription.duration_in_days=e.duration},resetForm(e=!0){e&&(this.newSubscription.package=""),this.newSubscription.package_name="",this.newSubscription.duration_in_days=0,this.newSubscription.start_date=new Date().toISOString().split("T")[0],this.newSubscription.price=0,this.newSubscription.notes=""},formatDate(e){if(!e)return"N/A";const t=document.documentElement.lang==="ar"?{locale:l}:{};return f(new Date(e),"PPP",t)},getRemainingTime(e){if(!e)return{text:this.translate("no_active_subscription"),classes:"text-text-secondary"};const t=new Date(e),s=document.documentElement.lang==="ar"?{locale:l}:{};return p(t)?{text:this.translate("expired_since")+" "+d(t,{...s,addSuffix:!0}),classes:"text-danger font-medium"}:{text:this.translate("expires")+" "+d(t,{...s,addSuffix:!0}),classes:"text-success font-medium"}}}}u.data("subscriptionManager",g);
